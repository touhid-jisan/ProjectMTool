{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"../actions/types\";\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return { ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return { ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return { ...state,\n        project_tasks: state.project_tasks.filter(project_task => project_task.projectSquence !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/boogeyman/Desktop/Github Repos/ProjectMTool/ppmtool-react-client/src/reducers/backlogReducer.js"],"names":["act","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","initialState","project_tasks","project_task","state","action","type","payload","filter","projectSquence"],"mappings":"AAAA,SAASA,GAAT,QAAoB,sBAApB;AACA,SAAQC,WAAR,EAAqBC,gBAArB,EAAuCC,mBAAvC,QAAiE,kBAAjE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,YAAY,EAAG;AAFE,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA8BI,MAA9B,EAAsC;AACjD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKR,WAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHF,QAAAA,aAAa,EAACG,MAAM,CAACE;AAFlB,OAAP;;AAKJ,SAAKR,gBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHD,QAAAA,YAAY,EAAGE,MAAM,CAACE;AAFnB,OAAP;;AAKJ,SAAKP,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,aAAa,EAAEE,KAAK,CAACF,aAAN,CAAoBM,MAApB,CACXL,YAAY,IAAIA,YAAY,CAACM,cAAb,KAAgCJ,MAAM,CAACE,OAD5C;AAFZ,OAAP;;AAOJ;AACI,aAAOH,KAAP;AAvBR;AAyBH","sourcesContent":["import { act } from \"react-dom/test-utils\";\nimport {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task : {}\n}\n\nexport default function(state = initialState,action) {\n    switch(action.type) {\n\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks:action.payload\n            }\n\n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task : action.payload\n            }\n\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task => project_task.projectSquence !== action.payload\n                )\n            }\n        \n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}