{"ast":null,"code":"var _jsxFileName = \"/home/boogeyman/Desktop/Github Repos/ProjectMTool/ppmtool-react-client/src/components/ProjectBoard/ProjectBoard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Backlog from './Backlog';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getBacklog } from '../../actions/backlogActions';\n\nclass ProjectBoard extends Component {\n  // constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  render() {\n    const {\n      id\n    } = this.props.match.params;\n    const {\n      project_tasks\n    } = this.props.backlog;\n    const {\n      errors\n    } = this.state;\n    let BoardContent;\n\n    const boardAlogrithms = (errors, project_tasks) => {\n      if (project_tasks.length === 0) {\n        if (errors.projectNotFound) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"alert alert-danger text-center\",\n            role: \"alert\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }\n          }, \"No Project Task Found\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"alert alert-info text-center\",\n            role: \"alert\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }\n          }, errors.projectNotFound);\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(Backlog, {\n          project_tasks_prop: project_tasks,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        });\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/addProjectTask/${id}`,\n      className: \"btn btn-primary mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \" Create Project Task\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog\n});\n\nexport default connect(mapStateToProps, {\n  getBacklog\n})(ProjectBoard);","map":{"version":3,"sources":["/home/boogeyman/Desktop/Github Repos/ProjectMTool/ppmtool-react-client/src/components/ProjectBoard/ProjectBoard.js"],"names":["React","Component","Link","Backlog","connect","PropTypes","getBacklog","ProjectBoard","constructor","state","errors","componentWillReceiveProps","nextProps","setState","componentDidMount","id","props","match","params","render","project_tasks","backlog","BoardContent","boardAlogrithms","length","projectNotFound","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Backlog from './Backlog';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {getBacklog} from '../../actions/backlogActions'\n\n\nclass ProjectBoard extends Component {\n\n// constructor to handle errors\n\n    constructor() {\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({errors:nextProps.errors});\n        }\n    }\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n    render() {\n        const { id } = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state;\n\n        let BoardContent;\n        const boardAlogrithms = (errors, project_tasks) => {\n            if(project_tasks.length === 0) {\n                if(errors.projectNotFound) {\n                    return (\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\n                            No Project Task Found\n                        </div>\n                    );\n                } else {\n                    return (\n                        <div className=\"alert alert-info text-center\" role=\"alert\">\n                            {errors.projectNotFound}\n                        </div>\n                    );\n                }\n            } else {\n                return(\n                    <Backlog project_tasks_prop={project_tasks}/>\n                );\n            } \n        }\n\n\n\n\n        return (\n            <div className=\"container\">\n                <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n                    <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n                </Link>\n                <br />\n                <hr />\n                \n            </div>\n        )\n    }\n}\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    backlog: state.backlog\n})\n\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);\n\n"]},"metadata":{},"sourceType":"module"}